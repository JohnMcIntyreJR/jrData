load("~/Work/jrData/data/map.RData")
list.files()
names = list.files()
read_csv(names[1])
assign(substr(names[1],1,nchar(names[1])-4), read_csv(names[1]))
save(substr(names[1],1,nchar(names[1])-4), files = "hi.RData")
save(names[1], files = "hi.RData")
h = names[1]
assign(substr(h,1,nchar(h)-4), read_csv(h))
names = list.files()
h = names[1]
assign(substr(h,1,nchar(h)-4), read_csv(h))
h = substr(names[1],1,nchar(names[1])-4)
h = substr(names,1,nchar(names)-4)
assign(h[1], read_csv(h))
assign(h[1], read_csv(names[1]))
save(h[1], files = "hi.RData")
save(h[1], file = "hi.RData")
save(list = "h[1]", file = "hi.RData")
save(list = h[1], file = "hi.RData")
load("~/Work/jrData/data/hi.RData")
load("~/Work/jrData/data/hi.RData")
names = list.files()
h = substr(names,1,nchar(names)-4)
for(i in 1:length(names)){
assign(h[i], read_csv(names[i]))
save(list = h[i], file = paste0(h[i].RData))
}
for(i in 1:length(names)){
assign(h[i], read_csv(names[i]))
save(list = h[i], file = paste0(h[i],"RData"))
}
for(i in 1:length(names)){
assign(h[i], read_csv(names[i]))
save(list = h[i], file = paste0(h[i],".RData"))
}
names = list.files()
h = substr(names,1,nchar(names)-4)
for(i in 1:length(names)){
assign(h[i], read_csv(names[i]))
save(list = h[i], file = paste0(h[i],".RData"))
}
load("~/Work/jrData/data/bond.RData")
load("~/Work/jrData/data/example.RData")
load("~/Work/jrData/data/GoTRating.RData")
load("~/Work/jrData/data/map.RData")
load("~/Work/jrData/data/package_numbers.RData")
load("~/Work/jrData/data/premier.RData")
library(jrData)
jrData::bond
library(jrData)
?bond
?jrData::bond
jrData::bond
?jrData::bond
library(jrData)
roxygen2::roxygenise()
library(jrData)
?bond
library(jrData)
setwd("~/Work")
list.files(pattern = "\\.git$")
list.files(pattern = "\\.git$", recursive = TRUE)
list.files(recursive = TRUE)
files = list.files(recursive = TRUE)
substr("hello", 1, nchar("hello") -3 )
substr("hello", 1, nchar("hello"))
substr("hello", 3, nchar("hello"))
substr("hello", nchar("hello")-4, nchar("hello"))
substr("hello", nchar("hello")-3, nchar("hello"))
substr("hello", nchar("hello")-2, nchar("hello"))
substr("hello", nchar("hello")-3, nchar("hello"))
files2 = files[substr("hello", nchar("hello")-3, nchar("hello")) == ".git"]
files2 = files[substr(files, nchar(files)-3, nchar(files)) == ".git"]
check_git = function(x){
if(substr(x, nchar(x)-3, nchar(x)) == ".git"){
return(1)
else{
return(0)
}
}
}
check_git = function(x){
if(substr(x, nchar(x)-3, nchar(x)) == ".git"){
x = x
else{
x = 0
}
}
}
check_git = function(x){
if(substr(x, nchar(x)-3, nchar(x)) == ".git"){
x = x
}
else{
x = 0
}
}
files2 = sapply(files, check_git)
files2
files2 = file
files2 = files
for(i in 1:length(files2)){
if(substr(files2[i], nchar(files2[i])-3, nchar(files2[i])) == ".git"){
files2[i] = files2[i]
}
else{
files2[i] = 0
}
}
files2 = as.data.frame(files2)
View(files2)
files3 = files2 %>% filter(files2 != 0)
library(dplyr)
files3 = files2 %>% filter(files2 != 0)
files = list.files(recursive = TRUE, all.files = TRUE)
files2 = files
for(i in 1:length(files2)){
if(substr(files2[i], nchar(files2[i])-3, nchar(files2[i])) == ".git"){
files2[i] = files2[i]
}
else{
files2[i] = 0
}
}
files2 = as.data.frame(files2)
files3 = files2 %>% filter(files2 != 0)
x = c("hehifs", "hgfdusb")
substr(x,1,2)
library(stringi)
stri_sub(x, 1, -4)
stri_sub(x, -4, 1)
stri_sub(x, 1, nchar(x) - 4)
?stri_sub
s <- "Lorem ipsum dolor sit amet, consectetur adipisicing elit."
stri_sub(s, from=1:3*6, to=21)
stri_sub(s, from=c(1,7,13), length=5)
stri_sub(s, from=1, length=1:3)
stri_sub(s, -17, -7)
stri_sub(s, -5, length=4)
stri_sub(x, -nchar(x), -3)
stri_sub(x, -nchar(x), 3)
stri_sub(x, nchar(x), -3)
stri_sub(x, nchar(x), 3)
stri_sub(x, nchar(x), -3)
library(strinr)
library(stringr)
files2$git = str_detect(files, ".git")
View(files2)
files2 = files
files2 = as.data.frame(files2)
files2$git = str_detect(files, ".git")
files2 = files2 %>% filter(git == TRUE)
x = "hellothere.git"
gsub("\\..*","",x)
gsub("\\./*","",x)
gsub("\\/*","",x)
x = "hellothere/git"
gsub("\\/*","",x)
gsub("\\//*","",x)
gsub("\\/.*","",x)
filenames = gsub("\\/.*","",files2$files2)
filenames = unique(filenames)
filenames
file.rename("AGRShiny.R", "GITHUB/AGRShiny.R")
file.rename("waterhack", "GITHUB/waterhack")
for(i in 1:length(filenames)){
file.rename(paste(filenames[i]), paste0("GITHUB/", filenames[i]))
}
lintr::lint_package()
lintr::lint_package()
library(jrData)
